{{#section "styles"}}
    <style>
        .form-input {
            @apply mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500;
        }
        .form-label {
            @apply block text-sm font-medium text-gray-700;
        }
        .btn-primary {
            @apply inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2;
        }
        .checkbox-label {
            @apply ml-2 block text-sm text-gray-900;
        }
        .checkbox-input {
            @apply h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500;
        }
        .error-message {
            @apply mt-1 text-sm text-red-600;
        }
    </style>
{{/section}}

<div class="min-h-screen bg-gray-50 dark:bg-gray-900 p-4 sm:p-6 lg:p-8 !pt-[105px] font-sans transition-colors duration-200">

    <!-- Breadcrumb and Back Button -->
    <div class="mx-auto py-0 sm:px-6 lg:px-8">
        <div id="bc" class="flex justify-between items-center bg-white dark:bg-gray-800 shadow-lg rounded-xl w-full mb-8 p-4 transition-colors duration-200">
            <nav class="flex" aria-label="Breadcrumb">
                <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
                    <li class="inline-flex items-center">
                        <a href="#" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-300 dark:hover:text-white transition-colors duration-200">
                            <svg class="w-3 h-3 me-2.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                                <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
                            </svg>
                            Home
                        </a>
                    </li>
                    <li>
                        <div class="flex items-center">
                            <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                            </svg>
                            <a href="/admin/users" class="ms-1 text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-300 dark:hover:text-white transition-colors duration-200">Users</a>
                        </div>
                    </li>
                    <li aria-current="page">
                        <div class="flex items-center">
                            <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                            </svg>
                            <span class="ms-1 text-sm font-medium text-gray-500 dark:text-gray-400">Create</span>
                        </div>
                    </li>
                </ol>
            </nav>
            <a href="/admin/users" class="text-white bg-gray-800 hover:bg-gray-700 focus:ring-4 focus:ring-gray-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-gray-700 dark:hover:bg-gray-600 focus:outline-none dark:focus:ring-gray-800 transition-colors duration-200 flex items-center">
                <svg class="w-4 h-4 me-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5H1m0 0 4 4M1 5l4-4"/>
                </svg>
                Back
            </a>
        </div>

        <!-- User Creation Form -->
        <section class="mb-2">
            <div class="overflow-x-auto rounded-lg shadow-md border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 p-6 transition-colors duration-200">
                <form action="/admin/users/{{tempUser.id}}" method="POST" id="userForm">
                    <!-- Add CSRF token if needed -->
                    <input type="hidden" name="_method" value="PATCH"> <!-- For method override -->
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- First Column -->
                        <div class="space-y-4">
                            <div>
                                <label for="username" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Username</label>
                                <input type="text" id="username" name="username" required value="{{tempUser.username}}"
                                    class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 transition-colors duration-200"
                                    placeholder="johndoe">
                                <p id="username-error" class="mt-1 text-sm text-red-600 dark:text-red-400 hidden"></p>
                            </div>

                            <div>
                                <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Email Address</label>
                                <input type="email" id="email" name="email" required value="{{tempUser.email}}"
                                    class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 transition-colors duration-200"
                                    placeholder="user@example.com">
                                <p id="email-error" class="mt-1 text-sm text-red-600 dark:text-red-400 hidden"></p>
                            </div>

                            <div>
                                <label for="firstName" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">First Name</label>
                                <input type="text" id="firstName" name="firstName" value="{{tempUser.firstName}}"
                                    class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 transition-colors duration-200"
                                    placeholder="John">
                            </div>
                        </div>

                        <!-- Second Column -->
                        <div class="space-y-4">
                            <div>
                                <label for="lastName" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Last Name</label>
                                <input type="text" id="lastName" name="lastName" value="{{tempUser.lastName}}"
                                    class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 transition-colors duration-200"
                                    placeholder="Doe">
                            </div>

                            <div>
                                <label for="newPassword" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">New Password (optional)</label>
                                <input type="password" id="newPassword" name="newPassword"
                                    class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 transition-colors duration-200"
                                    placeholder="••••••••">
                                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">Leave blank to keep current password</p>
                                <p id="password-error" class="mt-1 text-sm text-red-600 dark:text-red-400 hidden"></p>
                            </div>

                            <div>
                                <label for="confirmNewPassword" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Confirm New Password</label>
                                <input type="password" id="confirmNewPassword" name="confirmNewPassword"
                                    class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 transition-colors duration-200"
                                    placeholder="••••••••">
                                <p id="confirmPassword-error" class="mt-1 text-sm text-red-600 dark:text-red-400 hidden"></p>
                            </div>
                        </div>

                        <div class="space-y-4 md:col-span-2"> 
                            <div class="pt-2">
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Account Status</label>
                                <div class="flex items-center">
                                    <input id="isActive" name="isActive" type="checkbox" {{#if tempUser.isActive}}checked{{/if}}
                                        class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600">
                                    <label for="isActive" class="ms-2 text-sm font-medium text-gray-900 dark:text-gray-300">Active Account</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Roles Section -->
                    <div class="border-t border-gray-200 dark:border-gray-700 pt-6">
                        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Assign Roles</h3>
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            {{#each roles}}
                            <div class="flex items-start gap-2">
                                <div class="flex items-center h-5">
                                    <input id="role-{{id}}" name="roles" type="checkbox" value="{{id}}"
                                        class="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
                                        {{#if (includes ../selectedRoles id)}}checked{{/if}}>
                                </div>
                                <label for="role-{{id}}" class="ms-2">
                                    <span class="block text-sm font-medium text-gray-900 dark:text-white">{{name}}</span>
                                    <span class="block text-xs text-gray-500 dark:text-gray-400 mt-1">{{description}}</span>
                                </label>
                            </div>
                            {{/each}}
                        </div>
                    </div>



                    <!-- Form Actions -->
                    <div class="flex justify-end space-x-3 pt-6 border-t border-gray-200 dark:border-gray-700">
                        <a href="/admin/users" class="inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 py-2 px-4 text-sm font-medium text-gray-700 dark:text-gray-300 shadow-sm hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 transition-colors duration-200">
                            Cancel
                        </a>
                        <button type="submit" class="inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 transition-colors duration-200">
                            Update User
                        </button>
                    </div>
                </form>
            </div>
        </section>
    </div>
</div>

{{#section "scripts"}}
    <script src="/assets/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function() {

            document.getElementById('userForm').addEventListener('submit', function(e) {
                const password = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmNewPassword').value;
                
                if (password && password !== confirmPassword) {
                    e.preventDefault();
                    document.getElementById('confirmPassword-error').textContent = 'Passwords do not match';
                    document.getElementById('confirmPassword-error').classList.remove('hidden');
                }
            });
            // Form validation
            $('#userForm').on('submit', function(e) {
                e.preventDefault();
                clearErrors();

                let isValid = true;
                const formData = {
                    username: $('#username').val().trim(),
                    email: $('#email').val().trim(),
                    firstName: $('#firstName').val().trim(),
                    lastName: $('#lastName').val().trim(),
                    password: $('#newPassword').val(),
                    confirmPassword: $('#confirmNewPassword').val(),
                    isActive: $('#isActive').is(':checked'),
                    roles: $('input[name="roles"]:checked').map(function() {
                        return $(this).val();
                    }).get()
                };

                // Username validation
                if (!formData.username) {
                    showError('username-error', 'Username is required');
                    isValid = false;
                } else if (formData.username.length < 3) {
                    showError('username-error', 'Username must be at least 3 characters');
                    isValid = false;
                }

                // Email validation
                if (!formData.email) {
                    showError('email-error', 'Email is required');
                    isValid = false;
                } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.email)) {
                    showError('email-error', 'Please enter a valid email address');
                    isValid = false;
                }

                // Password validation
                {{!-- if (!formData.password) {
                    showError('password-error', 'Password is required');
                    isValid = false;
                } else if (formData.password.length < 6) {
                    showError('password-error', 'Password must be at least 6 characters');
                    isValid = false;
                } --}}

                // Confirm password validation
                {{!-- if (!formData.confirmPassword) {
                    showError('confirmPassword-error', 'Please confirm your password');
                    isValid = false;
                } else if (formData.password !== formData.confirmPassword) {
                    showError('confirmPassword-error', 'Passwords do not match');
                    isValid = false;
                } --}}

                if (isValid) {
                    // Show loading state
                    const submitBtn = $(this).find('button[type="submit"]');
                    submitBtn.prop('disabled', true).html(`
                        <span class="inline-flex items-center">
                            <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                            Processing...
                        </span>
                    `);

                    $.ajax({
                        url: `/admin/users/{{tempUser.id}}`,
                        method: 'PATCH',
                        contentType: 'application/json',
                        data: JSON.stringify(formData),
                        success: function(response) {
                            console.log({response})
                            {{!-- window.location.href = '/admin/users?success=User+updated+successfully'; --}}
                        },
                        error: function(xhr) {
                            submitBtn.prop('disabled', false).text('Update User');

                            const errorResponse = xhr.responseJSON;

                            if (xhr.status === 400 || xhr.status === 500) {
                                // MySQL duplicate key error
                                if (
                                    errorResponse?.error?.message &&
                                    typeof errorResponse.error.message === 'string'
                                ) {
                                    const message = errorResponse.error.message;

                                    if (message.includes('email')) {
                                        showError('email-error', 'This email address is already in use.');
                                    } else if (message.includes('username')) {
                                        showError('username-error', 'This username is already taken.');
                                    } else {
                                        alert(message); // generic fallback
                                    }
                                }

                                // NestJS ValidationPipe errors (array)
                                else if (Array.isArray(errorResponse?.error?.message)) {
                                    errorResponse.error.message.forEach(errorMsg => {
                                        if (errorMsg.includes('username')) {
                                            showError('username-error', errorMsg);
                                        } else if (errorMsg.includes('email')) {
                                            showError('email-error', errorMsg);
                                        } else if (errorMsg.includes('password')) {
                                            showError('password-error', errorMsg);
                                        }
                                    });
                                }

                                // Class-validator formatted errors
                                else if (errorResponse?.errors) {
                                    Object.keys(errorResponse.errors).forEach(field => {
                                        showError(`${field}-error`, errorResponse.errors[field].join(', '));
                                    });
                                }

                                else {
                                    alert('A server error occurred. Please try again.');
                                }
                            } else {
                                alert('An unexpected error occurred. Please try again.');
                            }
                        }

                    });
                }
            });

            function showError(elementId, message) {
                $(`#${elementId}`).text(message).removeClass('hidden');
                $(`#${elementId}`).closest('div').find('input').addClass('border-red-500');
            }

            function clearErrors() {
                $('.error-message').addClass('hidden');
                $('.form-input').removeClass('border-red-500');
            }
        });
    </script>
{{/section}}